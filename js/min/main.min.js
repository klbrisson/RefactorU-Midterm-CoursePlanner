function Course(e,t,r,o,n,s,i){this.department=e,this.code=t,this.name=r,this.credits=o,this.semesters=n,this.description=s,this.prereqs=i}function Major(e,t,r){this.name=e,this.department=t,this.requiredCourses=r}function findRequiredCourses(e){var t=majorList.filter(function(t){return e===t.name}),e=t[0],r=e.requiredCourses;return r}function filterByName(e){var t=courseList.filter(function(t){return-1!==t.name.toLowerCase().indexOf(e.toLowerCase())});return t}function mapCreateCourse(e){return e.map(function(e){return e.createCourse()})}var E140=new Course("E",140,"The Study of Literature",3,["F","S","SS"],"Basic principles of reading literary texts."),MATH117=new Course("MATH",117,"College Algebra in Context I",1,["F","S","SS"],"Functions as mathematical models. Linear, quadratic, and polynomial functions considered symbolically, graphically, numerically, and contextually."),MATH118=new Course("MATH",118,"College Algebra in Context II",1,["F","S","SS"],"Reciprocals of linear functions, rational functions, and power functions considered symbolically, graphically, numerically, and contextually. ",[MATH117]),CS110=new Course("CS",110,"Personal Computing",4,["F","S","SS"],"Hardware/software concepts, Internet services, OS commands, electronic presentations, spreadsheets, databases, programming concepts."),CS122=new Course("CS",122,"Theory for Introductory Programming",1,["F","S"],"Set theory, definitions operations, Venn diagrams, power sets, propositional logic and proofs. Functions; loop invariants",[MATH118,CS161]),CS160=new Course("CS",160,"Foundations in Programming",4,["F","S"],"Introduction to computer theory, programming and systems. Sets, functions, logic. Procedural programming in Java. Computer and data models",[MATH118]),CS161=new Course("CS",161,"Object-Oriented Problem Solving",4,["F","S"],"Fundamental object oriented concepts, inheritance, polymorphism, basic algorithms, linked lists, assertions, recursion, induction, counting.",[CS160,["MATH141","MATH155","MATH160"]]),comSci=new Major("Computer Science","CS",[MATH117,MATH118,CS110,CS122,CS160,CS161]),eng=new Major("English","E",[E140]),math=new Major("Math","MATH",[MATH117,MATH118]),courseList=[E140,MATH117,MATH118,CS110,CS122,CS160,CS161],majorList=[comSci,eng,math];Course.prototype.createCourse=function(){var e=$(".course.template").clone();return e.find(".course-name").text(this.name),e.find(".course-credits").text(this.credits),e.find(".course-description").text(this.description),e.removeClass("template"),e},Major.prototype.createMajor=function(){var e=$("<option></option>");return e.text(this.name),e},$(document).on("ready",function(){$(".fall").append(MATH117.createCourse()),$(".spring").append(MATH118.createCourse()),$("#required-courses").append(mapCreateCourse(courseList)),$("#select-major").append(majorList.map(function(e){return e.createMajor()})),$("#course-listing").append(mapCreateCourse(courseList)),$("#course-listing").find(".course-description").append('<button id="add-elective-btn" class="btn btn-default btn-xs">Add Elective</button>'),$(document).on("change","#select-major",function(){var e=$(this).val();if($("#required-courses").empty(),"Select Major"===e)return $("#required-courses").append(mapCreateCourse(courseList)),void 0;var t=findRequiredCourses(e);$("#required-courses").append(mapCreateCourse(t))}),$(document).on("click",".course-name",function(){$(this).closest(".course").find(".course-description").toggle()}),$(document).on("keydown","#course-search",function(){$("#course-listing").empty();var e=$(this).val();$("#course-listing").append(mapCreateCourse(filterByName(e)))}),$(document).on("click","#course-list-btn",function(){}),$(document).on("click","#add-elective-btn",function(){var e=$(this).closest("li").clone();e.find("#add-elective-btn").remove(),e.find("#add-elective-btn").remove(),e.find(".course-description").hide(),$("#my-electives").append(e),$("#my-electives").addClass("sortable"),$(this).closest("li").find(".course-description").toggle(),$("#my-electives").sortable()}),$("#required-courses").sortable(),$(".sortable").sortable(),$(".sortable").sortable({forcePlaceholderSize:!0}),$("#required-courses, .fall, .spring").sortable({connectWith:".connected"})});